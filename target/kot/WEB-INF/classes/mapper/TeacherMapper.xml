<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.znufew.kot.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="cn.znufew.kot.entity.Teacher">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="identify" jdbcType="BIT" property="identify" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="home_code" jdbcType="VARCHAR" property="homeCode" />
    <result column="class_code" jdbcType="VARCHAR" property="classCode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="comm_permissions" jdbcType="BIGINT" property="commPermissions" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="identify_time" jdbcType="BIGINT" property="identifyTime" />
    <result column="passw" jdbcType="VARCHAR" property="passw" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, identify, teacher_id, nick_name, name, sex, home_code, class_code, email, phone, 
    comm_permissions, create_time, identify_time, passw
  </sql>
  <select id="selectByExample" parameterType="cn.znufew.kot.entity.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.znufew.kot.entity.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.znufew.kot.entity.Teacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher (identify, teacher_id, nick_name, 
      name, sex, home_code, class_code, 
      email, phone, comm_permissions, 
      create_time, identify_time, passw
      )
    values (#{identify,jdbcType=BIT}, #{teacherId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{homeCode,jdbcType=VARCHAR}, #{classCode,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=BIGINT}, #{commPermissions,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT}, #{identifyTime,jdbcType=BIGINT}, #{passw,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.znufew.kot.entity.Teacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="identify != null">
        identify,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="homeCode != null">
        home_code,
      </if>
      <if test="classCode != null">
        class_code,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="commPermissions != null">
        comm_permissions,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="identifyTime != null">
        identify_time,
      </if>
      <if test="passw != null">
        passw,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="identify != null">
        #{identify,jdbcType=BIT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="homeCode != null">
        #{homeCode,jdbcType=VARCHAR},
      </if>
      <if test="classCode != null">
        #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="commPermissions != null">
        #{commPermissions,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="identifyTime != null">
        #{identifyTime,jdbcType=BIGINT},
      </if>
      <if test="passw != null">
        #{passw,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.znufew.kot.entity.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.identify != null">
        identify = #{record.identify,jdbcType=BIT},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.homeCode != null">
        home_code = #{record.homeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.classCode != null">
        class_code = #{record.classCode,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.commPermissions != null">
        comm_permissions = #{record.commPermissions,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.identifyTime != null">
        identify_time = #{record.identifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.passw != null">
        passw = #{record.passw,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=BIGINT},
      identify = #{record.identify,jdbcType=BIT},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      home_code = #{record.homeCode,jdbcType=VARCHAR},
      class_code = #{record.classCode,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=BIGINT},
      comm_permissions = #{record.commPermissions,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      identify_time = #{record.identifyTime,jdbcType=BIGINT},
      passw = #{record.passw,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.znufew.kot.entity.Teacher">
    update teacher
    <set>
      <if test="identify != null">
        identify = #{identify,jdbcType=BIT},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="homeCode != null">
        home_code = #{homeCode,jdbcType=VARCHAR},
      </if>
      <if test="classCode != null">
        class_code = #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="commPermissions != null">
        comm_permissions = #{commPermissions,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="identifyTime != null">
        identify_time = #{identifyTime,jdbcType=BIGINT},
      </if>
      <if test="passw != null">
        passw = #{passw,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.znufew.kot.entity.Teacher">
    update teacher
    set identify = #{identify,jdbcType=BIT},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      home_code = #{homeCode,jdbcType=VARCHAR},
      class_code = #{classCode,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=BIGINT},
      comm_permissions = #{commPermissions,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      identify_time = #{identifyTime,jdbcType=BIGINT},
      passw = #{passw,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>