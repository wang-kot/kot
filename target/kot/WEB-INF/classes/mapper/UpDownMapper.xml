<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.znufew.kot.mapper.UpDownMapper">
  <resultMap id="BaseResultMap" type="cn.znufew.kot.entity.UpDown">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="to_type" jdbcType="BIT" property="toType" />
    <result column="from" jdbcType="BIGINT" property="from" />
    <result column="to" jdbcType="BIGINT" property="to" />
    <result column="up_own" jdbcType="TINYINT" property="upOwn" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, to_type, from, to, up_own, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.znufew.kot.entity.UpDownExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from up_down
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from up_down
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from up_down
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.znufew.kot.entity.UpDownExample">
    delete from up_down
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.znufew.kot.entity.UpDown">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into up_down (to_type, from, to, up_own, 
      create_time)
    values (#{toType,jdbcType=BIT}, #{from,jdbcType=BIGINT}, #{to,jdbcType=BIGINT}, #{upOwn,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.znufew.kot.entity.UpDown">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into up_down
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="toType != null">
        to_type,
      </if>
      <if test="from != null">
        from,
      </if>
      <if test="to != null">
        to,
      </if>
      <if test="upOwn != null">
        up_own,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="toType != null">
        #{toType,jdbcType=BIT},
      </if>
      <if test="from != null">
        #{from,jdbcType=BIGINT},
      </if>
      <if test="to != null">
        #{to,jdbcType=BIGINT},
      </if>
      <if test="upOwn != null">
        #{upOwn,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.znufew.kot.entity.UpDownExample" resultType="java.lang.Long">
    select count(*) from up_down
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update up_down
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.toType != null">
        to_type = #{record.toType,jdbcType=BIT},
      </if>
      <if test="record.from != null">
        from = #{record.from,jdbcType=BIGINT},
      </if>
      <if test="record.to != null">
        to = #{record.to,jdbcType=BIGINT},
      </if>
      <if test="record.upOwn != null">
        up_own = #{record.upOwn,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update up_down
    set id = #{record.id,jdbcType=INTEGER},
      to_type = #{record.toType,jdbcType=BIT},
      from = #{record.from,jdbcType=BIGINT},
      to = #{record.to,jdbcType=BIGINT},
      up_own = #{record.upOwn,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.znufew.kot.entity.UpDown">
    update up_down
    <set>
      <if test="toType != null">
        to_type = #{toType,jdbcType=BIT},
      </if>
      <if test="from != null">
        from = #{from,jdbcType=BIGINT},
      </if>
      <if test="to != null">
        to = #{to,jdbcType=BIGINT},
      </if>
      <if test="upOwn != null">
        up_own = #{upOwn,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.znufew.kot.entity.UpDown">
    update up_down
    set to_type = #{toType,jdbcType=BIT},
      from = #{from,jdbcType=BIGINT},
      to = #{to,jdbcType=BIGINT},
      up_own = #{upOwn,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>