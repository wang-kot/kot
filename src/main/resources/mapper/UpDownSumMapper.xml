<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.znufew.kot.mapper.UpDownSumMapper">
  <resultMap id="BaseResultMap" type="cn.znufew.kot.entity.UpDownSum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="obj_id" jdbcType="BIGINT" property="objId" />
    <result column="sum_up" jdbcType="BIGINT" property="sumUp" />
    <result column="sum_down" jdbcType="BIGINT" property="sumDown" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, obj_id, sum_up, sum_down, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.znufew.kot.entity.UpDownSumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from up_down_sum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from up_down_sum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from up_down_sum
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.znufew.kot.entity.UpDownSumExample">
    delete from up_down_sum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.znufew.kot.entity.UpDownSum">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into up_down_sum (type, obj_id, sum_up, 
      sum_down, update_time)
    values (#{type,jdbcType=BIT}, #{objId,jdbcType=BIGINT}, #{sumUp,jdbcType=BIGINT}, 
      #{sumDown,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.znufew.kot.entity.UpDownSum">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into up_down_sum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="objId != null">
        obj_id,
      </if>
      <if test="sumUp != null">
        sum_up,
      </if>
      <if test="sumDown != null">
        sum_down,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="objId != null">
        #{objId,jdbcType=BIGINT},
      </if>
      <if test="sumUp != null">
        #{sumUp,jdbcType=BIGINT},
      </if>
      <if test="sumDown != null">
        #{sumDown,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.znufew.kot.entity.UpDownSumExample" resultType="java.lang.Long">
    select count(*) from up_down_sum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update up_down_sum
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.objId != null">
        obj_id = #{record.objId,jdbcType=BIGINT},
      </if>
      <if test="record.sumUp != null">
        sum_up = #{record.sumUp,jdbcType=BIGINT},
      </if>
      <if test="record.sumDown != null">
        sum_down = #{record.sumDown,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update up_down_sum
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=BIT},
      obj_id = #{record.objId,jdbcType=BIGINT},
      sum_up = #{record.sumUp,jdbcType=BIGINT},
      sum_down = #{record.sumDown,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.znufew.kot.entity.UpDownSum">
    update up_down_sum
    <set>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="objId != null">
        obj_id = #{objId,jdbcType=BIGINT},
      </if>
      <if test="sumUp != null">
        sum_up = #{sumUp,jdbcType=BIGINT},
      </if>
      <if test="sumDown != null">
        sum_down = #{sumDown,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.znufew.kot.entity.UpDownSum">
    update up_down_sum
    set type = #{type,jdbcType=BIT},
      obj_id = #{objId,jdbcType=BIGINT},
      sum_up = #{sumUp,jdbcType=BIGINT},
      sum_down = #{sumDown,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>